import discord
from discord.ext import commands
from discord.ui import Button, View
from discord import Embed
from discord.ui import TextInput, Modal
import os  # Importando para acessar as vari√°veis de ambiente

# Obter o token do GitHub Secrets
token = os.getenv('DISCORD_TOKEN')  # Use o nome do secret configurado no GitHub

# Verificar se o token foi encontrado
if not token:
    raise ValueError("Token n√£o encontrado! Verifique se o GitHub Secret 'DISCORD_TOKEN' foi configurado corretamente.")

prefixo = "!"  # Usando um prefixo fixo para o comando
id_servidor = 123456789012345678  # Insira o ID do servidor desejado

# Definir os intents para o bot
intents = discord.Intents.default()
intents.message_content = True  # Permite que o bot leia o conte√∫do das mensagens

# Cria√ß√£o do bot com o prefixo
bot = commands.Bot(command_prefix=prefixo, intents=intents)

# Evento para quando o bot estiver pronto
@bot.event
async def on_ready():
    print(f'{bot.user} est√° conectado ao Discord!')

# Modal para pegar o nome do canal
class CanalModal(Modal):
    def __init__(self):
        super().__init__(title="Nome do Canal")

        # Campo de input para nome do canal
        self.nome_canal = TextInput(
            label="Qual o nome do canal?",
            placeholder="Digite o nome do canal",
            required=True,
            max_length=100
        )
        self.add_item(self.nome_canal)

    async def on_submit(self, interaction: discord.Interaction):
        nome = self.nome_canal.value
        guild = interaction.guild

        # Encontrar a categoria "Canais" (ou qualquer outra que voc√™ queira)
        category = discord.utils.get(guild.categories, name="‚ïê‚ïê‚ïê‚ïê‚ïê ‚Ä¢„ÄéBATE PONTO„Äè‚Ä¢ ‚ïê‚ïê‚ïê‚ïê‚ïê")

        if category is None:
            await interaction.response.send_message("N√£o encontrei a categoria mensionada. Certifique-se de que ela existe!", ephemeral=True)
            return

        # Adicionar o prefixo fixo antes do nome personalizado
        nome_com_prefixo = f"„Äéüìë„Äè{nome}"

        # Permiss√µes
        overwrites = {
            guild.default_role: discord.PermissionOverwrite(read_messages=False),  # Nenhum membro pode ver o canal por padr√£o
            interaction.user: discord.PermissionOverwrite(read_messages=True, send_messages=True),  # Permiss√µes para quem criou o canal
        }

        # Permitir que os administradores vejam e enviem mensagens
        for role in guild.roles:
            if role.permissions.administrator:
                overwrites[role] = discord.PermissionOverwrite(read_messages=True, send_messages=True)

        try:
            # Criar o canal com o nome fornecido na categoria "Canais"
            new_channel = await guild.create_text_channel(nome_com_prefixo, category=category, overwrites=overwrites)

            # Mensagem a ser enviada no canal criado
            mensagem = f"QRA:\n\nINICIO:\n\nPAUSA:\n\nCONTINUIDADE:\n\nFINAL:\n\nTOTAL:\n\nPRINTS:\n\n(OBs: A partir de hoje, √â obrigat√≥rio que se p√¥r acaso voc√™s derem um intervalo de tempo no patrulhamento, marquem o in√≠cio da pausa e o hor√°rio da continua√ß√£o, caso n√£o haja a constata√ß√£o do mesmo, o relat√≥rio estar√° sujeita a anula√ß√£o)"

            # Enviar a mensagem no canal criado
            await new_channel.send(mensagem)

            # Enviar a men√ß√£o do usu√°rio ap√≥s a mensagem
            await new_channel.send(f"\n{interaction.user.mention}")

            # Resposta final com o canal criado
            await interaction.response.send_message(f'Canal "{new_channel.name}" criado com sucesso na categoria "‚ïê‚ïê‚ïê‚ïê‚ïê ‚Ä¢„ÄéBATE PONTO„Äè‚Ä¢ ‚ïê‚ïê‚ïê‚ïê‚ïê"!', ephemeral=True)

        except Exception as e:
            # Em caso de erro, enviar uma mensagem com o erro
            await interaction.response.send_message(f'Ocorreu um erro ao criar o canal: {str(e)}', ephemeral=True)

# Comando para criar o bot√£o que permite criar um canal
@bot.command()
async def criar_canal(ctx):
    # Embed de apresenta√ß√£o
    embed = Embed(
        title="Criar Bate Ponto",
        description="Para criar seu Bate Ponto clique no bot√£o abaixo 'Criar Bate Ponto'",
        color=discord.Color.blue()
    )

    # Bot√£o que ir√° acionar a cria√ß√£o do canal
    button = Button(label="Criar Bate Ponto", style=discord.ButtonStyle.green)

    # Fun√ß√£o que ser√° chamada quando o bot√£o for pressionado
    async def button_callback(interaction):
        # Criar o Modal para inserir o nome do canal
        modal = CanalModal()
        await interaction.response.send_modal(modal)

    # Adiciona a fun√ß√£o ao bot√£o
    button.callback = button_callback

    # Adiciona o bot√£o √† view
    view = View()
    view.add_item(button)

    # Envia a mensagem com o embed e o bot√£o
    await ctx.send(embed=embed, view=view)

# Rodar o bot com o token do GitHub Secrets
bot.run(token)
